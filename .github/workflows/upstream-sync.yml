---
name: Upstream Sync Workflow
'on':
  workflow_call:
    inputs:
      release_series:
        description: 'The OpenStack release series you wish to sync against.'
        required: true
        type: string
env:
  GITHUB_TOKEN: ${{github.token}}
  DOWNSTREAM_OWNER: stackhpc
  UPSTREAM_OWNER: openstack
jobs:
  upstream-sync:
    runs-on: ubuntu-latest
    steps:
      - name: Get upstream SHA
        id: get_upstream_sha
        run: |
          set -e
          upstream_sha=$(gh api \
          -H "Accept: application/vnd.github.v3+json" \
          "/repos/${{env.UPSTREAM_OWNER}}/$(basename $(pwd))/commits/stable/${{inputs.release_series}}" --jq ".sha")
          echo "::set-output name=result::$upstream_sha"
      - name: Check if downstream branch exists
        id: check_if_downstream_branch_exists
        run: |
          set -e
          api_path="/repos/${{env.DOWNSTREAM_OWNER}}/$(basename $(pwd))/branches/stackhpc/${{inputs.release_series}}"
          response=$(gh api -H "Accept: application/vnd.github.v3+json" $api_path --silent --include) || true
          if [[ "$response" =~ "HTTP/2.0 200 OK" ]]; then
            echo "::set-output name=result::true"
          elif [[ "$response" =~ "HTTP/2.0 404 Not Found" ]]; then
            echo "::set-output name=result::false"
          else
            exit 1
          fi
      - name: Create missing downstream branch
        if: steps.check_if_downstream_branch_exists.outputs.result == 'false'
        run: |
          gh api \
          --method POST \
          -H "Accept: application/vnd.github.v3+json" \
          "/repos/${{env.DOWNSTREAM_OWNER}}/$(basename $(pwd))/git/refs" \
          -f ref='refs/heads/stackhpc/${{inputs.release_series}}' \
          -f sha=${{steps.get_upstream_sha.outputs.result}}
      - name: Check if upstream is ahead of downstream
        if: steps.check_if_downstream_branch_exists.outputs.result == 'true'
        id: check_if_ahead
        run: |
          set -e
          ahead_by=$(gh api \
          -H "Accept: application/vnd.github.v3+json" \
          "/repos/${{env.DOWNSTREAM_OWNER}}/$(basename $(pwd))/compare/stackhpc/${{inputs.release_series}}...${{env.UPSTREAM_OWNER}}:stable/${{inputs.release_series}}" \
          --jq '.ahead_by')
          echo "::set-output name=result::$ahead_by"
      - name: Create copy of the upstream branch
        if: steps.check_if_ahead.outputs.result > 0
        run: |
          gh api \
          --method POST \
          -H "Accept: application/vnd.github.v3+json" \
          "/repos/${{env.DOWNSTREAM_OWNER}}/$(basename $(pwd))/git/refs" \
          -f ref="refs/heads/upstream/${{inputs.release_series}}-$(date +%F)" \
          -f sha=${{steps.get_upstream_sha.outputs.result}}
      - name: Create a pull request
        if: steps.check_if_ahead.outputs.result > 0
        id: create_pull_request
        run: |
          set -e
          pull_request_url=$(gh api \
          --method POST \
          -H "Accept: application/vnd.github.v3+json" \
          /repos/${{env.DOWNSTREAM_OWNER}}/$(basename $(pwd))/pulls \
          -f title="Synchronise ${{inputs.release_series}} with upstream" \
          -f body="This PR contains a snapshot of ${{inputs.release_series}} from upstream." \
          -f head="${{env.DOWNSTREAM_OWNER}}:upstream/${{inputs.release_series}}-$(date +%F)" \
          -f base="stackhpc/${{inputs.release_series}}" --jq '.url')
          echo "::set-output name=result::$(basename $pull_request_url)"
      - name: Add labels to pull request
        if: steps.check_if_ahead.outputs.result > 0
        run: |
          set -e
          api_path="https://api.github.com/repos/${{env.DOWNSTREAM_OWNER}}$(basename $(pwd))/issues/${{steps.create_pull_request.outputs.result}}/labels"
          curl \
          -X POST \
          -H "Authorization: token ${{env.GITHUB_TOKEN}}" \
          -H "Accept: application/vnd.github.v3+json" \
          $api_path \
          -d '{"labels":["automated","synchronisation"]}'
